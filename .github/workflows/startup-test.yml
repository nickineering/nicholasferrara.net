name: App Testing

on:
  push:
    branches: ["main", "*"]
  pull_request:
    branches: ["main", "*"]

jobs:
  test:
    name: Startup & Visual Test
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium

      - name: Build application
        run: npm run build

      - name: Start server
        run: |
          npm run start &
          echo $! > server.pid

          # Wait for server and verify stability
          for i in {1..15}; do
            if curl -f -s -o /dev/null http://localhost:8788/; then
              echo "✅ Server responding"
              break
            elif [ $i -eq 15 ]; then
              echo "❌ Server failed to start"
              exit 1
            else
              sleep 2
            fi
          done

          # Brief stability check (reduced from 15s to 5s)
          echo "🔍 Checking server stability..."
          sleep 5
          if ! kill -0 $(cat server.pid) 2>/dev/null; then
            echo "❌ Server crashed after initial startup"
            exit 1
          fi

          # Final connectivity verification
          if ! curl -f -s -o /dev/null http://localhost:8788/; then
            echo "❌ Server stopped responding"
            exit 1
          fi

          echo "✅ Server is stable and ready"

      - name: Download baseline from repository
        run: |
          mkdir -p baseline-screenshots

          if curl -f -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                 -H "Accept: application/vnd.github.v3.raw" \
                 "https://api.github.com/repos/${{ github.repository }}/contents/visual-baselines/homepage-baseline.png?ref=main" \
                 -o baseline-screenshots/homepage-baseline.png; then
            echo "✅ Downloaded baseline"
          else
            echo "ℹ️ No baseline found - treating as initial run"
            touch baseline-screenshots/.no-baseline
          fi

      - name: Run visual regression test
        run: |
          # Take screenshot using our CI script
          node -e "
          const { chromium } = require('playwright');
          const fs = require('fs');

          (async () => {
            const browser = await chromium.launch();
            const page = await browser.newPage();

            try {
              await page.setViewportSize({ width: 1280, height: 720 });
              await page.goto('http://localhost:8788/', {
                waitUntil: 'domcontentloaded',
                timeout: 60000
              });
              await page.waitForTimeout(3000);

              if (!fs.existsSync('temp-screenshots')) {
                fs.mkdirSync('temp-screenshots');
              }

              await page.screenshot({
                path: 'temp-screenshots/homepage-current.png',
                fullPage: true
              });

              console.log('✅ Screenshot captured');

            } finally {
              await browser.close();
            }
          })();
          "

      - name: Compare with baseline
        run: node scripts/ci-visual-compare.js

      - name: Upload visual test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: visual-test-results-${{ github.run_id }}-${{ github.run_attempt }}
          path: temp-screenshots/
          retention-days: 30

      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) 2>/dev/null || true
            rm server.pid
          fi
